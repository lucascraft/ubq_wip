/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package net.sf.smbt.ezableton.provider;

import java.util.ArrayList;
import java.util.Collection;

import net.sf.smbt.ezableton.util.EzabletonAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EzabletonItemProviderAdapterFactory extends EzabletonAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EzabletonItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.AbletonLiveSndCmd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbletonLiveSndCmdItemProvider abletonLiveSndCmdItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.AbletonLiveSndCmd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbletonLiveSndCmdAdapter() {
		if (abletonLiveSndCmdItemProvider == null) {
			abletonLiveSndCmdItemProvider = new AbletonLiveSndCmdItemProvider(this);
		}

		return abletonLiveSndCmdItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTempoReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTempoReqItemProvider liveTempoReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTempoReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTempoReqAdapter() {
		if (liveTempoReqItemProvider == null) {
			liveTempoReqItemProvider = new LiveTempoReqItemProvider(this);
		}

		return liveTempoReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTempoRcv} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTempoRcvItemProvider liveTempoRcvItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTempoRcv}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTempoRcvAdapter() {
		if (liveTempoRcvItemProvider == null) {
			liveTempoRcvItemProvider = new LiveTempoRcvItemProvider(this);
		}

		return liveTempoRcvItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTimeReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTimeReqItemProvider liveTimeReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTimeReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTimeReqAdapter() {
		if (liveTimeReqItemProvider == null) {
			liveTimeReqItemProvider = new LiveTimeReqItemProvider(this);
		}

		return liveTimeReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTimeRcv} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTimeRcvItemProvider liveTimeRcvItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTimeRcv}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTimeRcvAdapter() {
		if (liveTimeRcvItemProvider == null) {
			liveTimeRcvItemProvider = new LiveTimeRcvItemProvider(this);
		}

		return liveTimeRcvItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveOverdub} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveOverdubItemProvider liveOverdubItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveOverdub}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveOverdubAdapter() {
		if (liveOverdubItemProvider == null) {
			liveOverdubItemProvider = new LiveOverdubItemProvider(this);
		}

		return liveOverdubItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveStateReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveStateReqItemProvider liveStateReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveStateReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveStateReqAdapter() {
		if (liveStateReqItemProvider == null) {
			liveStateReqItemProvider = new LiveStateReqItemProvider(this);
		}

		return liveStateReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveStateRcv} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveStateRcvItemProvider liveStateRcvItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveStateRcv}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveStateRcvAdapter() {
		if (liveStateRcvItemProvider == null) {
			liveStateRcvItemProvider = new LiveStateRcvItemProvider(this);
		}

		return liveStateRcvItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveUndoReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveUndoReqItemProvider liveUndoReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveUndoReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveUndoReqAdapter() {
		if (liveUndoReqItemProvider == null) {
			liveUndoReqItemProvider = new LiveUndoReqItemProvider(this);
		}

		return liveUndoReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveRedoReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveRedoReqItemProvider liveRedoReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveRedoReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveRedoReqAdapter() {
		if (liveRedoReqItemProvider == null) {
			liveRedoReqItemProvider = new LiveRedoReqItemProvider(this);
		}

		return liveRedoReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNextCueReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNextCueReqItemProvider liveNextCueReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNextCueReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNextCueReqAdapter() {
		if (liveNextCueReqItemProvider == null) {
			liveNextCueReqItemProvider = new LiveNextCueReqItemProvider(this);
		}

		return liveNextCueReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePrevCueReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePrevCueReqItemProvider livePrevCueReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePrevCueReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePrevCueReqAdapter() {
		if (livePrevCueReqItemProvider == null) {
			livePrevCueReqItemProvider = new LivePrevCueReqItemProvider(this);
		}

		return livePrevCueReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlayReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlayReqItemProvider livePlayReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlayReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlayReqAdapter() {
		if (livePlayReqItemProvider == null) {
			livePlayReqItemProvider = new LivePlayReqItemProvider(this);
		}

		return livePlayReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlayContinueReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlayContinueReqItemProvider livePlayContinueReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlayContinueReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlayContinueReqAdapter() {
		if (livePlayContinueReqItemProvider == null) {
			livePlayContinueReqItemProvider = new LivePlayContinueReqItemProvider(this);
		}

		return livePlayContinueReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlayClipReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlayClipReqItemProvider livePlayClipReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlayClipReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlayClipReqAdapter() {
		if (livePlayClipReqItemProvider == null) {
			livePlayClipReqItemProvider = new LivePlayClipReqItemProvider(this);
		}

		return livePlayClipReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.livePlaySelectionReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected livePlaySelectionReqItemProvider livePlaySelectionReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.livePlaySelectionReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createlivePlaySelectionReqAdapter() {
		if (livePlaySelectionReqItemProvider == null) {
			livePlaySelectionReqItemProvider = new livePlaySelectionReqItemProvider(this);
		}

		return livePlaySelectionReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlayClipSlotReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlayClipSlotReqItemProvider livePlayClipSlotReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlayClipSlotReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlayClipSlotReqAdapter() {
		if (livePlayClipSlotReqItemProvider == null) {
			livePlayClipSlotReqItemProvider = new LivePlayClipSlotReqItemProvider(this);
		}

		return livePlayClipSlotReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlaySceneReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlaySceneReqItemProvider livePlaySceneReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlaySceneReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlaySceneReqAdapter() {
		if (livePlaySceneReqItemProvider == null) {
			livePlaySceneReqItemProvider = new LivePlaySceneReqItemProvider(this);
		}

		return livePlaySceneReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveStopReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveStopReqItemProvider liveStopReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveStopReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveStopReqAdapter() {
		if (liveStopReqItemProvider == null) {
			liveStopReqItemProvider = new LiveStopReqItemProvider(this);
		}

		return liveStopReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveStopClipReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveStopClipReqItemProvider liveStopClipReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveStopClipReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveStopClipReqAdapter() {
		if (liveStopClipReqItemProvider == null) {
			liveStopClipReqItemProvider = new LiveStopClipReqItemProvider(this);
		}

		return liveStopClipReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveStopTrackReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveStopTrackReqItemProvider liveStopTrackReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveStopTrackReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveStopTrackReqAdapter() {
		if (liveStopTrackReqItemProvider == null) {
			liveStopTrackReqItemProvider = new LiveStopTrackReqItemProvider(this);
		}

		return liveStopTrackReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveScenesReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveScenesReqItemProvider liveScenesReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveScenesReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveScenesReqAdapter() {
		if (liveScenesReqItemProvider == null) {
			liveScenesReqItemProvider = new LiveScenesReqItemProvider(this);
		}

		return liveScenesReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTracksReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTracksReqItemProvider liveTracksReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTracksReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTracksReqAdapter() {
		if (liveTracksReqItemProvider == null) {
			liveTracksReqItemProvider = new LiveTracksReqItemProvider(this);
		}

		return liveTracksReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveSceneReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveSceneReqItemProvider liveSceneReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveSceneReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveSceneReqAdapter() {
		if (liveSceneReqItemProvider == null) {
			liveSceneReqItemProvider = new LiveSceneReqItemProvider(this);
		}

		return liveSceneReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameSceneBlockReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameSceneBlockReqItemProvider liveNameSceneBlockReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameSceneBlockReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameSceneBlockReqAdapter() {
		if (liveNameSceneBlockReqItemProvider == null) {
			liveNameSceneBlockReqItemProvider = new LiveNameSceneBlockReqItemProvider(this);
		}

		return liveNameSceneBlockReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameTrackReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameTrackReqItemProvider liveNameTrackReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameTrackReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameTrackReqAdapter() {
		if (liveNameTrackReqItemProvider == null) {
			liveNameTrackReqItemProvider = new LiveNameTrackReqItemProvider(this);
		}

		return liveNameTrackReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameTrackblockReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameTrackblockReqItemProvider liveNameTrackblockReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameTrackblockReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameTrackblockReqAdapter() {
		if (liveNameTrackblockReqItemProvider == null) {
			liveNameTrackblockReqItemProvider = new LiveNameTrackblockReqItemProvider(this);
		}

		return liveNameTrackblockReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameClipReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameClipReqItemProvider liveNameClipReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameClipReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameClipReqAdapter() {
		if (liveNameClipReqItemProvider == null) {
			liveNameClipReqItemProvider = new LiveNameClipReqItemProvider(this);
		}

		return liveNameClipReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameClipblockreq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameClipblockreqItemProvider liveNameClipblockreqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameClipblockreq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameClipblockreqAdapter() {
		if (liveNameClipblockreqItemProvider == null) {
			liveNameClipblockreqItemProvider = new LiveNameClipblockreqItemProvider(this);
		}

		return liveNameClipblockreqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveArmReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveArmReqItemProvider liveArmReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveArmReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveArmReqAdapter() {
		if (liveArmReqItemProvider == null) {
			liveArmReqItemProvider = new LiveArmReqItemProvider(this);
		}

		return liveArmReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMuteReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMuteReqItemProvider liveMuteReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMuteReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMuteReqAdapter() {
		if (liveMuteReqItemProvider == null) {
			liveMuteReqItemProvider = new LiveMuteReqItemProvider(this);
		}

		return liveMuteReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveVolumeSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveVolumeSetItemProvider liveVolumeSetItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveVolumeSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveVolumeSetAdapter() {
		if (liveVolumeSetItemProvider == null) {
			liveVolumeSetItemProvider = new LiveVolumeSetItemProvider(this);
		}

		return liveVolumeSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePanSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePanSetItemProvider livePanSetItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePanSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePanSetAdapter() {
		if (livePanSetItemProvider == null) {
			livePanSetItemProvider = new LivePanSetItemProvider(this);
		}

		return livePanSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveSendReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveSendReqItemProvider liveSendReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveSendReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveSendReqAdapter() {
		if (liveSendReqItemProvider == null) {
			liveSendReqItemProvider = new LiveSendReqItemProvider(this);
		}

		return liveSendReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePitchSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePitchSetItemProvider livePitchSetItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePitchSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePitchSetAdapter() {
		if (livePitchSetItemProvider == null) {
			livePitchSetItemProvider = new LivePitchSetItemProvider(this);
		}

		return livePitchSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnMuteReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnMuteReqItemProvider liveReturnMuteReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnMuteReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnMuteReqAdapter() {
		if (liveReturnMuteReqItemProvider == null) {
			liveReturnMuteReqItemProvider = new LiveReturnMuteReqItemProvider(this);
		}

		return liveReturnMuteReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnSolo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnSoloItemProvider liveReturnSoloItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnSolo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnSoloAdapter() {
		if (liveReturnSoloItemProvider == null) {
			liveReturnSoloItemProvider = new LiveReturnSoloItemProvider(this);
		}

		return liveReturnSoloItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceViewItemProvider liveDeviceViewItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceViewAdapter() {
		if (liveDeviceViewItemProvider == null) {
			liveDeviceViewItemProvider = new LiveDeviceViewItemProvider(this);
		}

		return liveDeviceViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMasterMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMasterMeterItemProvider liveMasterMeterItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMasterMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMasterMeterAdapter() {
		if (liveMasterMeterItemProvider == null) {
			liveMasterMeterItemProvider = new LiveMasterMeterItemProvider(this);
		}

		return liveMasterMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveClipPosition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveClipPositionItemProvider liveClipPositionItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveClipPosition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveClipPositionAdapter() {
		if (liveClipPositionItemProvider == null) {
			liveClipPositionItemProvider = new LiveClipPositionItemProvider(this);
		}

		return liveClipPositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackMeterItemProvider liveTrackMeterItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackMeterAdapter() {
		if (liveTrackMeterItemProvider == null) {
			liveTrackMeterItemProvider = new LiveTrackMeterItemProvider(this);
		}

		return liveTrackMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameTrackQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameTrackQItemProvider liveNameTrackQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameTrackQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameTrackQAdapter() {
		if (liveNameTrackQItemProvider == null) {
			liveNameTrackQItemProvider = new LiveNameTrackQItemProvider(this);
		}

		return liveNameTrackQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameSceneQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameSceneQItemProvider liveNameSceneQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameSceneQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameSceneQAdapter() {
		if (liveNameSceneQItemProvider == null) {
			liveNameSceneQItemProvider = new LiveNameSceneQItemProvider(this);
		}

		return liveNameSceneQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameClipQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameClipQItemProvider liveNameClipQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameClipQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameClipQAdapter() {
		if (liveNameClipQItemProvider == null) {
			liveNameClipQItemProvider = new LiveNameClipQItemProvider(this);
		}

		return liveNameClipQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveNameSceneReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveNameSceneReqItemProvider liveNameSceneReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveNameSceneReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveNameSceneReqAdapter() {
		if (liveNameSceneReqItemProvider == null) {
			liveNameSceneReqItemProvider = new LiveNameSceneReqItemProvider(this);
		}

		return liveNameSceneReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveScenesQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveScenesQItemProvider liveScenesQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveScenesQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveScenesQAdapter() {
		if (liveScenesQItemProvider == null) {
			liveScenesQItemProvider = new LiveScenesQItemProvider(this);
		}

		return liveScenesQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTracksQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTracksQItemProvider liveTracksQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTracksQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTracksQAdapter() {
		if (liveTracksQItemProvider == null) {
			liveTracksQItemProvider = new LiveTracksQItemProvider(this);
		}

		return liveTracksQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LivePlay} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LivePlayItemProvider livePlayItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LivePlay}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLivePlayAdapter() {
		if (livePlayItemProvider == null) {
			livePlayItemProvider = new LivePlayItemProvider(this);
		}

		return livePlayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveVolume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveVolumeItemProvider liveVolumeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveVolume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveVolumeAdapter() {
		if (liveVolumeItemProvider == null) {
			liveVolumeItemProvider = new LiveVolumeItemProvider(this);
		}

		return liveVolumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveScene2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveScene2ItemProvider liveScene2ItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveScene2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveScene2Adapter() {
		if (liveScene2ItemProvider == null) {
			liveScene2ItemProvider = new LiveScene2ItemProvider(this);
		}

		return liveScene2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnMeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnMeterItemProvider liveReturnMeterItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnMeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnMeterAdapter() {
		if (liveReturnMeterItemProvider == null) {
			liveReturnMeterItemProvider = new LiveReturnMeterItemProvider(this);
		}

		return liveReturnMeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceRangeQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceRangeQItemProvider liveDeviceRangeQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceRangeQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceRangeQAdapter() {
		if (liveDeviceRangeQItemProvider == null) {
			liveDeviceRangeQItemProvider = new LiveDeviceRangeQItemProvider(this);
		}

		return liveDeviceRangeQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceRangeItemProvider liveDeviceRangeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceRangeAdapter() {
		if (liveDeviceRangeItemProvider == null) {
			liveDeviceRangeItemProvider = new LiveDeviceRangeItemProvider(this);
		}

		return liveDeviceRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceRangeAll} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceRangeAllItemProvider liveDeviceRangeAllItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceRangeAll}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceRangeAllAdapter() {
		if (liveDeviceRangeAllItemProvider == null) {
			liveDeviceRangeAllItemProvider = new LiveDeviceRangeAllItemProvider(this);
		}

		return liveDeviceRangeAllItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceRangeAllQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceRangeAllQItemProvider liveDeviceRangeAllQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceRangeAllQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceRangeAllQAdapter() {
		if (liveDeviceRangeAllQItemProvider == null) {
			liveDeviceRangeAllQItemProvider = new LiveDeviceRangeAllQItemProvider(this);
		}

		return liveDeviceRangeAllQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDeviceRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDeviceRangeItemProvider liveReturnDeviceRangeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDeviceRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDeviceRangeAdapter() {
		if (liveReturnDeviceRangeItemProvider == null) {
			liveReturnDeviceRangeItemProvider = new LiveReturnDeviceRangeItemProvider(this);
		}

		return liveReturnDeviceRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDeviceRangeQItemProvider liveReturnDeviceRangeQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDeviceRangeQAdapter() {
		if (liveReturnDeviceRangeQItemProvider == null) {
			liveReturnDeviceRangeQItemProvider = new LiveReturnDeviceRangeQItemProvider(this);
		}

		return liveReturnDeviceRangeQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeAll} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDeviceRangeAllItemProvider liveReturnDeviceRangeAllItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeAll}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDeviceRangeAllAdapter() {
		if (liveReturnDeviceRangeAllItemProvider == null) {
			liveReturnDeviceRangeAllItemProvider = new LiveReturnDeviceRangeAllItemProvider(this);
		}

		return liveReturnDeviceRangeAllItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeAllQ} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDeviceRangeAllQItemProvider liveReturnDeviceRangeAllQItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDeviceRangeAllQ}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDeviceRangeAllQAdapter() {
		if (liveReturnDeviceRangeAllQItemProvider == null) {
			liveReturnDeviceRangeAllQItemProvider = new LiveReturnDeviceRangeAllQItemProvider(this);
		}

		return liveReturnDeviceRangeAllQItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceParam} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceParamItemProvider liveDeviceParamItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceParam}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceParamAdapter() {
		if (liveDeviceParamItemProvider == null) {
			liveDeviceParamItemProvider = new LiveDeviceParamItemProvider(this);
		}

		return liveDeviceParamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDeviceParamSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceParamSetItemProvider liveDeviceParamSetItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDeviceParamSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceParamSetAdapter() {
		if (liveDeviceParamSetItemProvider == null) {
			liveDeviceParamSetItemProvider = new LiveDeviceParamSetItemProvider(this);
		}

		return liveDeviceParamSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackVolume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackVolumeItemProvider liveTrackVolumeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackVolume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackVolumeAdapter() {
		if (liveTrackVolumeItemProvider == null) {
			liveTrackVolumeItemProvider = new LiveTrackVolumeItemProvider(this);
		}

		return liveTrackVolumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackPan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackPanItemProvider liveTrackPanItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackPan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackPanAdapter() {
		if (liveTrackPanItemProvider == null) {
			liveTrackPanItemProvider = new LiveTrackPanItemProvider(this);
		}

		return liveTrackPanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackMute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackMuteItemProvider liveTrackMuteItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackMute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackMuteAdapter() {
		if (liveTrackMuteItemProvider == null) {
			liveTrackMuteItemProvider = new LiveTrackMuteItemProvider(this);
		}

		return liveTrackMuteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackSolo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackSoloItemProvider liveTrackSoloItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackSolo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackSoloAdapter() {
		if (liveTrackSoloItemProvider == null) {
			liveTrackSoloItemProvider = new LiveTrackSoloItemProvider(this);
		}

		return liveTrackSoloItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackName} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackNameItemProvider liveTrackNameItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackName}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackNameAdapter() {
		if (liveTrackNameItemProvider == null) {
			liveTrackNameItemProvider = new LiveTrackNameItemProvider(this);
		}

		return liveTrackNameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackArm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackArmItemProvider liveTrackArmItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackArm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackArmAdapter() {
		if (liveTrackArmItemProvider == null) {
			liveTrackArmItemProvider = new LiveTrackArmItemProvider(this);
		}

		return liveTrackArmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackSend} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackSendItemProvider liveTrackSendItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackSend}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackSendAdapter() {
		if (liveTrackSendItemProvider == null) {
			liveTrackSendItemProvider = new LiveTrackSendItemProvider(this);
		}

		return liveTrackSendItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackPitch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackPitchItemProvider liveTrackPitchItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackPitch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackPitchAdapter() {
		if (liveTrackPitchItemProvider == null) {
			liveTrackPitchItemProvider = new LiveTrackPitchItemProvider(this);
		}

		return liveTrackPitchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnVolumeReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnVolumeReqItemProvider liveReturnVolumeReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnVolumeReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnVolumeReqAdapter() {
		if (liveReturnVolumeReqItemProvider == null) {
			liveReturnVolumeReqItemProvider = new LiveReturnVolumeReqItemProvider(this);
		}

		return liveReturnVolumeReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnPanReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnPanReqItemProvider liveReturnPanReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnPanReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnPanReqAdapter() {
		if (liveReturnPanReqItemProvider == null) {
			liveReturnPanReqItemProvider = new LiveReturnPanReqItemProvider(this);
		}

		return liveReturnPanReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnSendReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnSendReqItemProvider liveReturnSendReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnSendReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnSendReqAdapter() {
		if (liveReturnSendReqItemProvider == null) {
			liveReturnSendReqItemProvider = new LiveReturnSendReqItemProvider(this);
		}

		return liveReturnSendReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMasterVolumeReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMasterVolumeReqItemProvider liveMasterVolumeReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMasterVolumeReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMasterVolumeReqAdapter() {
		if (liveMasterVolumeReqItemProvider == null) {
			liveMasterVolumeReqItemProvider = new LiveMasterVolumeReqItemProvider(this);
		}

		return liveMasterVolumeReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMasterPanReq} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMasterPanReqItemProvider liveMasterPanReqItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMasterPanReq}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMasterPanReqAdapter() {
		if (liveMasterPanReqItemProvider == null) {
			liveMasterPanReqItemProvider = new LiveMasterPanReqItemProvider(this);
		}

		return liveMasterPanReqItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackJump} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackJumpItemProvider liveTrackJumpItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackJump}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackJumpAdapter() {
		if (liveTrackJumpItemProvider == null) {
			liveTrackJumpItemProvider = new LiveTrackJumpItemProvider(this);
		}

		return liveTrackJumpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackInfoItemProvider liveTrackInfoItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackInfoAdapter() {
		if (liveTrackInfoItemProvider == null) {
			liveTrackInfoItemProvider = new LiveTrackInfoItemProvider(this);
		}

		return liveTrackInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveTrackDeviceView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveTrackDeviceViewItemProvider liveTrackDeviceViewItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveTrackDeviceView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveTrackDeviceViewAdapter() {
		if (liveTrackDeviceViewItemProvider == null) {
			liveTrackDeviceViewItemProvider = new LiveTrackDeviceViewItemProvider(this);
		}

		return liveTrackDeviceViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDeviceView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDeviceViewItemProvider liveReturnDeviceViewItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDeviceView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDeviceViewAdapter() {
		if (liveReturnDeviceViewItemProvider == null) {
			liveReturnDeviceViewItemProvider = new LiveReturnDeviceViewItemProvider(this);
		}

		return liveReturnDeviceViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMasterDeviceView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMasterDeviceViewItemProvider liveMasterDeviceViewItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMasterDeviceView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMasterDeviceViewAdapter() {
		if (liveMasterDeviceViewItemProvider == null) {
			liveMasterDeviceViewItemProvider = new LiveMasterDeviceViewItemProvider(this);
		}

		return liveMasterDeviceViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDetailView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDetailViewItemProvider liveDetailViewItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDetailView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDetailViewAdapter() {
		if (liveDetailViewItemProvider == null) {
			liveDetailViewItemProvider = new LiveDetailViewItemProvider(this);
		}

		return liveDetailViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveClipInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveClipInfoItemProvider liveClipInfoItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveClipInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveClipInfoAdapter() {
		if (liveClipInfoItemProvider == null) {
			liveClipInfoItemProvider = new LiveClipInfoItemProvider(this);
		}

		return liveClipInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDevicelist} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDevicelistItemProvider liveDevicelistItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDevicelist}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDevicelistAdapter() {
		if (liveDevicelistItemProvider == null) {
			liveDevicelistItemProvider = new LiveDevicelistItemProvider(this);
		}

		return liveDevicelistItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveDevice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveDeviceItemProvider liveDeviceItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveDevice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveDeviceAdapter() {
		if (liveDeviceItemProvider == null) {
			liveDeviceItemProvider = new LiveDeviceItemProvider(this);
		}

		return liveDeviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnDevicelist} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnDevicelistItemProvider liveReturnDevicelistItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnDevicelist}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnDevicelistAdapter() {
		if (liveReturnDevicelistItemProvider == null) {
			liveReturnDevicelistItemProvider = new LiveReturnDevicelistItemProvider(this);
		}

		return liveReturnDevicelistItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnVolume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnVolumeItemProvider liveReturnVolumeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnVolume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnVolumeAdapter() {
		if (liveReturnVolumeItemProvider == null) {
			liveReturnVolumeItemProvider = new LiveReturnVolumeItemProvider(this);
		}

		return liveReturnVolumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnPan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnPanItemProvider liveReturnPanItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnPan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnPanAdapter() {
		if (liveReturnPanItemProvider == null) {
			liveReturnPanItemProvider = new LiveReturnPanItemProvider(this);
		}

		return liveReturnPanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveReturnSend} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveReturnSendItemProvider liveReturnSendItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveReturnSend}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveReturnSendAdapter() {
		if (liveReturnSendItemProvider == null) {
			liveReturnSendItemProvider = new LiveReturnSendItemProvider(this);
		}

		return liveReturnSendItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.ezableton.LiveMasterVolume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiveMasterVolumeItemProvider liveMasterVolumeItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.ezableton.LiveMasterVolume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiveMasterVolumeAdapter() {
		if (liveMasterVolumeItemProvider == null) {
			liveMasterVolumeItemProvider = new LiveMasterVolumeItemProvider(this);
		}

		return liveMasterVolumeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (abletonLiveSndCmdItemProvider != null) abletonLiveSndCmdItemProvider.dispose();
		if (liveTempoReqItemProvider != null) liveTempoReqItemProvider.dispose();
		if (liveTempoRcvItemProvider != null) liveTempoRcvItemProvider.dispose();
		if (liveTimeReqItemProvider != null) liveTimeReqItemProvider.dispose();
		if (liveTimeRcvItemProvider != null) liveTimeRcvItemProvider.dispose();
		if (liveOverdubItemProvider != null) liveOverdubItemProvider.dispose();
		if (liveStateReqItemProvider != null) liveStateReqItemProvider.dispose();
		if (liveStateRcvItemProvider != null) liveStateRcvItemProvider.dispose();
		if (liveUndoReqItemProvider != null) liveUndoReqItemProvider.dispose();
		if (liveRedoReqItemProvider != null) liveRedoReqItemProvider.dispose();
		if (liveNextCueReqItemProvider != null) liveNextCueReqItemProvider.dispose();
		if (livePrevCueReqItemProvider != null) livePrevCueReqItemProvider.dispose();
		if (livePlayReqItemProvider != null) livePlayReqItemProvider.dispose();
		if (livePlayContinueReqItemProvider != null) livePlayContinueReqItemProvider.dispose();
		if (livePlayClipReqItemProvider != null) livePlayClipReqItemProvider.dispose();
		if (livePlaySelectionReqItemProvider != null) livePlaySelectionReqItemProvider.dispose();
		if (livePlayClipSlotReqItemProvider != null) livePlayClipSlotReqItemProvider.dispose();
		if (livePlaySceneReqItemProvider != null) livePlaySceneReqItemProvider.dispose();
		if (liveStopReqItemProvider != null) liveStopReqItemProvider.dispose();
		if (liveStopClipReqItemProvider != null) liveStopClipReqItemProvider.dispose();
		if (liveStopTrackReqItemProvider != null) liveStopTrackReqItemProvider.dispose();
		if (liveScenesReqItemProvider != null) liveScenesReqItemProvider.dispose();
		if (liveTracksReqItemProvider != null) liveTracksReqItemProvider.dispose();
		if (liveSceneReqItemProvider != null) liveSceneReqItemProvider.dispose();
		if (liveNameSceneBlockReqItemProvider != null) liveNameSceneBlockReqItemProvider.dispose();
		if (liveNameTrackReqItemProvider != null) liveNameTrackReqItemProvider.dispose();
		if (liveNameTrackblockReqItemProvider != null) liveNameTrackblockReqItemProvider.dispose();
		if (liveNameClipReqItemProvider != null) liveNameClipReqItemProvider.dispose();
		if (liveNameClipblockreqItemProvider != null) liveNameClipblockreqItemProvider.dispose();
		if (liveArmReqItemProvider != null) liveArmReqItemProvider.dispose();
		if (liveMuteReqItemProvider != null) liveMuteReqItemProvider.dispose();
		if (liveVolumeSetItemProvider != null) liveVolumeSetItemProvider.dispose();
		if (livePanSetItemProvider != null) livePanSetItemProvider.dispose();
		if (liveSendReqItemProvider != null) liveSendReqItemProvider.dispose();
		if (livePitchSetItemProvider != null) livePitchSetItemProvider.dispose();
		if (liveReturnMuteReqItemProvider != null) liveReturnMuteReqItemProvider.dispose();
		if (liveReturnVolumeReqItemProvider != null) liveReturnVolumeReqItemProvider.dispose();
		if (liveReturnPanReqItemProvider != null) liveReturnPanReqItemProvider.dispose();
		if (liveReturnSendReqItemProvider != null) liveReturnSendReqItemProvider.dispose();
		if (liveMasterVolumeReqItemProvider != null) liveMasterVolumeReqItemProvider.dispose();
		if (liveMasterPanReqItemProvider != null) liveMasterPanReqItemProvider.dispose();
		if (liveTrackJumpItemProvider != null) liveTrackJumpItemProvider.dispose();
		if (liveTrackInfoItemProvider != null) liveTrackInfoItemProvider.dispose();
		if (liveTrackDeviceViewItemProvider != null) liveTrackDeviceViewItemProvider.dispose();
		if (liveReturnDeviceViewItemProvider != null) liveReturnDeviceViewItemProvider.dispose();
		if (liveMasterDeviceViewItemProvider != null) liveMasterDeviceViewItemProvider.dispose();
		if (liveDetailViewItemProvider != null) liveDetailViewItemProvider.dispose();
		if (liveClipInfoItemProvider != null) liveClipInfoItemProvider.dispose();
		if (liveDevicelistItemProvider != null) liveDevicelistItemProvider.dispose();
		if (liveDeviceItemProvider != null) liveDeviceItemProvider.dispose();
		if (liveReturnDevicelistItemProvider != null) liveReturnDevicelistItemProvider.dispose();
		if (liveReturnVolumeItemProvider != null) liveReturnVolumeItemProvider.dispose();
		if (liveReturnPanItemProvider != null) liveReturnPanItemProvider.dispose();
		if (liveReturnSendItemProvider != null) liveReturnSendItemProvider.dispose();
		if (liveMasterVolumeItemProvider != null) liveMasterVolumeItemProvider.dispose();
		if (liveReturnSoloItemProvider != null) liveReturnSoloItemProvider.dispose();
		if (liveDeviceViewItemProvider != null) liveDeviceViewItemProvider.dispose();
		if (liveMasterMeterItemProvider != null) liveMasterMeterItemProvider.dispose();
		if (liveClipPositionItemProvider != null) liveClipPositionItemProvider.dispose();
		if (liveTrackMeterItemProvider != null) liveTrackMeterItemProvider.dispose();
		if (liveNameTrackQItemProvider != null) liveNameTrackQItemProvider.dispose();
		if (liveNameSceneQItemProvider != null) liveNameSceneQItemProvider.dispose();
		if (liveNameClipQItemProvider != null) liveNameClipQItemProvider.dispose();
		if (liveNameSceneReqItemProvider != null) liveNameSceneReqItemProvider.dispose();
		if (liveScenesQItemProvider != null) liveScenesQItemProvider.dispose();
		if (liveTracksQItemProvider != null) liveTracksQItemProvider.dispose();
		if (livePlayItemProvider != null) livePlayItemProvider.dispose();
		if (liveVolumeItemProvider != null) liveVolumeItemProvider.dispose();
		if (liveScene2ItemProvider != null) liveScene2ItemProvider.dispose();
		if (liveReturnMeterItemProvider != null) liveReturnMeterItemProvider.dispose();
		if (liveDeviceRangeQItemProvider != null) liveDeviceRangeQItemProvider.dispose();
		if (liveDeviceRangeItemProvider != null) liveDeviceRangeItemProvider.dispose();
		if (liveDeviceRangeAllItemProvider != null) liveDeviceRangeAllItemProvider.dispose();
		if (liveDeviceRangeAllQItemProvider != null) liveDeviceRangeAllQItemProvider.dispose();
		if (liveReturnDeviceRangeItemProvider != null) liveReturnDeviceRangeItemProvider.dispose();
		if (liveReturnDeviceRangeQItemProvider != null) liveReturnDeviceRangeQItemProvider.dispose();
		if (liveReturnDeviceRangeAllItemProvider != null) liveReturnDeviceRangeAllItemProvider.dispose();
		if (liveReturnDeviceRangeAllQItemProvider != null) liveReturnDeviceRangeAllQItemProvider.dispose();
		if (liveDeviceParamItemProvider != null) liveDeviceParamItemProvider.dispose();
		if (liveDeviceParamSetItemProvider != null) liveDeviceParamSetItemProvider.dispose();
		if (liveTrackVolumeItemProvider != null) liveTrackVolumeItemProvider.dispose();
		if (liveTrackPanItemProvider != null) liveTrackPanItemProvider.dispose();
		if (liveTrackMuteItemProvider != null) liveTrackMuteItemProvider.dispose();
		if (liveTrackSoloItemProvider != null) liveTrackSoloItemProvider.dispose();
		if (liveTrackNameItemProvider != null) liveTrackNameItemProvider.dispose();
		if (liveTrackArmItemProvider != null) liveTrackArmItemProvider.dispose();
		if (liveTrackSendItemProvider != null) liveTrackSendItemProvider.dispose();
		if (liveTrackPitchItemProvider != null) liveTrackPitchItemProvider.dispose();
	}

}
