/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package net.sf.smbt.osc.eztuio2.provider;

import java.util.ArrayList;
import java.util.Collection;

import net.sf.smbt.osc.eztuio2.util.Eztuio2AdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Eztuio2ItemProviderAdapterFactory extends Eztuio2AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Eztuio2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2Tok} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2TokItemProvider tuio2TokItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2Tok}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2TokAdapter() {
		if (tuio2TokItemProvider == null) {
			tuio2TokItemProvider = new Tuio2TokItemProvider(this);
		}

		return tuio2TokItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2Ptr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2PtrItemProvider tuio2PtrItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2Ptr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2PtrAdapter() {
		if (tuio2PtrItemProvider == null) {
			tuio2PtrItemProvider = new Tuio2PtrItemProvider(this);
		}

		return tuio2PtrItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2Sym} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2SymItemProvider tuio2SymItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2Sym}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2SymAdapter() {
		if (tuio2SymItemProvider == null) {
			tuio2SymItemProvider = new Tuio2SymItemProvider(this);
		}

		return tuio2SymItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2T3D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2T3DItemProvider tuio2T3DItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2T3D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2T3DAdapter() {
		if (tuio2T3DItemProvider == null) {
			tuio2T3DItemProvider = new Tuio2T3DItemProvider(this);
		}

		return tuio2T3DItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2P3D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2P3DItemProvider tuio2P3DItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2P3D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2P3DAdapter() {
		if (tuio2P3DItemProvider == null) {
			tuio2P3DItemProvider = new Tuio2P3DItemProvider(this);
		}

		return tuio2P3DItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2B3D} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2B3DItemProvider tuio2B3DItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2B3D}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2B3DAdapter() {
		if (tuio2B3DItemProvider == null) {
			tuio2B3DItemProvider = new Tuio2B3DItemProvider(this);
		}

		return tuio2B3DItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2CHG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2CHGItemProvider tuio2CHGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2CHG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2CHGAdapter() {
		if (tuio2CHGItemProvider == null) {
			tuio2CHGItemProvider = new Tuio2CHGItemProvider(this);
		}

		return tuio2CHGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2OCG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2OCGItemProvider tuio2OCGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2OCG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2OCGAdapter() {
		if (tuio2OCGItemProvider == null) {
			tuio2OCGItemProvider = new Tuio2OCGItemProvider(this);
		}

		return tuio2OCGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2ICG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2ICGItemProvider tuio2ICGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2ICG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2ICGAdapter() {
		if (tuio2ICGItemProvider == null) {
			tuio2ICGItemProvider = new Tuio2ICGItemProvider(this);
		}

		return tuio2ICGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.TreeElem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TreeElemItemProvider treeElemItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.TreeElem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTreeElemAdapter() {
		if (treeElemItemProvider == null) {
			treeElemItemProvider = new TreeElemItemProvider(this);
		}

		return treeElemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.SpansArea} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpansAreaItemProvider spansAreaItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.SpansArea}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpansAreaAdapter() {
		if (spansAreaItemProvider == null) {
			spansAreaItemProvider = new SpansAreaItemProvider(this);
		}

		return spansAreaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Link} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkItemProvider linkItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Link}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkAdapter() {
		if (linkItemProvider == null) {
			linkItemProvider = new LinkItemProvider(this);
		}

		return linkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.LinkTreeElem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkTreeElemItemProvider linkTreeElemItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.LinkTreeElem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkTreeElemAdapter() {
		if (linkTreeElemItemProvider == null) {
			linkTreeElemItemProvider = new LinkTreeElemItemProvider(this);
		}

		return linkTreeElemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2SKG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2SKGItemProvider tuio2SKGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2SKG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2SKGAdapter() {
		if (tuio2SKGItemProvider == null) {
			tuio2SKGItemProvider = new Tuio2SKGItemProvider(this);
		}

		return tuio2SKGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2SVG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2SVGItemProvider tuio2SVGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2SVG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2SVGAdapter() {
		if (tuio2SVGItemProvider == null) {
			tuio2SVGItemProvider = new Tuio2SVGItemProvider(this);
		}

		return tuio2SVGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2ARG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2ARGItemProvider tuio2ARGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2ARG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2ARGAdapter() {
		if (tuio2ARGItemProvider == null) {
			tuio2ARGItemProvider = new Tuio2ARGItemProvider(this);
		}

		return tuio2ARGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2RAW} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2RAWItemProvider tuio2RAWItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2RAW}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2RAWAdapter() {
		if (tuio2RAWItemProvider == null) {
			tuio2RAWItemProvider = new Tuio2RAWItemProvider(this);
		}

		return tuio2RAWItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2CTL} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2CTLItemProvider tuio2CTLItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2CTL}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2CTLAdapter() {
		if (tuio2CTLItemProvider == null) {
			tuio2CTLItemProvider = new Tuio2CTLItemProvider(this);
		}

		return tuio2CTLItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2DAT} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DATItemProvider tuio2DATItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2DAT}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DATAdapter() {
		if (tuio2DATItemProvider == null) {
			tuio2DATItemProvider = new Tuio2DATItemProvider(this);
		}

		return tuio2DATItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2SIG} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2SIGItemProvider tuio2SIGItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2SIG}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2SIGAdapter() {
		if (tuio2SIGItemProvider == null) {
			tuio2SIGItemProvider = new Tuio2SIGItemProvider(this);
		}

		return tuio2SIGItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2ALA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2ALAItemProvider tuio2ALAItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2ALA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2ALAAdapter() {
		if (tuio2ALAItemProvider == null) {
			tuio2ALAItemProvider = new Tuio2ALAItemProvider(this);
		}

		return tuio2ALAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2COA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2COAItemProvider tuio2COAItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2COA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2COAAdapter() {
		if (tuio2COAItemProvider == null) {
			tuio2COAItemProvider = new Tuio2COAItemProvider(this);
		}

		return tuio2COAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2LIA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2LIAItemProvider tuio2LIAItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2LIA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2LIAAdapter() {
		if (tuio2LIAItemProvider == null) {
			tuio2LIAItemProvider = new Tuio2LIAItemProvider(this);
		}

		return tuio2LIAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2LLA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2LLAItemProvider tuio2LLAItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2LLA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2LLAAdapter() {
		if (tuio2LLAItemProvider == null) {
			tuio2LLAItemProvider = new Tuio2LLAItemProvider(this);
		}

		return tuio2LLAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2LTA} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2LTAItemProvider tuio2LTAItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2LTA}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2LTAAdapter() {
		if (tuio2LTAItemProvider == null) {
			tuio2LTAItemProvider = new Tuio2LTAItemProvider(this);
		}

		return tuio2LTAItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2FRM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2FRMItemProvider tuio2FRMItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2FRM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2FRMAdapter() {
		if (tuio2FRMItemProvider == null) {
			tuio2FRMItemProvider = new Tuio2FRMItemProvider(this);
		}

		return tuio2FRMItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2ALV} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2ALVItemProvider tuio2ALVItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2ALV}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2ALVAdapter() {
		if (tuio2ALVItemProvider == null) {
			tuio2ALVItemProvider = new Tuio2ALVItemProvider(this);
		}

		return tuio2ALVItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.Tuio2BND} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2BNDItemProvider tuio2BNDItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.Tuio2BND}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2BNDAdapter() {
		if (tuio2BNDItemProvider == null) {
			tuio2BNDItemProvider = new Tuio2BNDItemProvider(this);
		}

		return tuio2BNDItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio2.TuioPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TuioPointItemProvider tuioPointItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio2.TuioPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuioPointAdapter() {
		if (tuioPointItemProvider == null) {
			tuioPointItemProvider = new TuioPointItemProvider(this);
		}

		return tuioPointItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (tuio2TokItemProvider != null) tuio2TokItemProvider.dispose();
		if (tuio2PtrItemProvider != null) tuio2PtrItemProvider.dispose();
		if (tuio2SymItemProvider != null) tuio2SymItemProvider.dispose();
		if (tuio2T3DItemProvider != null) tuio2T3DItemProvider.dispose();
		if (tuio2P3DItemProvider != null) tuio2P3DItemProvider.dispose();
		if (tuio2B3DItemProvider != null) tuio2B3DItemProvider.dispose();
		if (tuio2CHGItemProvider != null) tuio2CHGItemProvider.dispose();
		if (tuio2OCGItemProvider != null) tuio2OCGItemProvider.dispose();
		if (tuio2SKGItemProvider != null) tuio2SKGItemProvider.dispose();
		if (tuio2SVGItemProvider != null) tuio2SVGItemProvider.dispose();
		if (tuio2ARGItemProvider != null) tuio2ARGItemProvider.dispose();
		if (tuio2RAWItemProvider != null) tuio2RAWItemProvider.dispose();
		if (tuio2CTLItemProvider != null) tuio2CTLItemProvider.dispose();
		if (tuio2DATItemProvider != null) tuio2DATItemProvider.dispose();
		if (tuio2SIGItemProvider != null) tuio2SIGItemProvider.dispose();
		if (tuio2ALAItemProvider != null) tuio2ALAItemProvider.dispose();
		if (tuio2COAItemProvider != null) tuio2COAItemProvider.dispose();
		if (tuio2LIAItemProvider != null) tuio2LIAItemProvider.dispose();
		if (tuio2LLAItemProvider != null) tuio2LLAItemProvider.dispose();
		if (tuio2LTAItemProvider != null) tuio2LTAItemProvider.dispose();
		if (tuio2FRMItemProvider != null) tuio2FRMItemProvider.dispose();
		if (tuio2ALVItemProvider != null) tuio2ALVItemProvider.dispose();
		if (tuio2BNDItemProvider != null) tuio2BNDItemProvider.dispose();
		if (tuioPointItemProvider != null) tuioPointItemProvider.dispose();
		if (tuio2ICGItemProvider != null) tuio2ICGItemProvider.dispose();
		if (treeElemItemProvider != null) treeElemItemProvider.dispose();
		if (spansAreaItemProvider != null) spansAreaItemProvider.dispose();
		if (linkItemProvider != null) linkItemProvider.dispose();
		if (linkTreeElemItemProvider != null) linkTreeElemItemProvider.dispose();
	}

}
