/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package net.sf.smbt.osc.eztuio.provider;

import java.util.ArrayList;
import java.util.Collection;

import net.sf.smbt.osc.eztuio.util.EztuioAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EztuioItemProviderAdapterFactory extends EztuioAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EztuioItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DObj} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DObjItemProvider tuio2DObjItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DObj}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DObjAdapter() {
		if (tuio2DObjItemProvider == null) {
			tuio2DObjItemProvider = new Tuio2DObjItemProvider(this);
		}

		return tuio2DObjItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DCur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DCurItemProvider tuio2DCurItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DCur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DCurAdapter() {
		if (tuio2DCurItemProvider == null) {
			tuio2DCurItemProvider = new Tuio2DCurItemProvider(this);
		}

		return tuio2DCurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio3DObj} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio3DObjItemProvider tuio3DObjItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio3DObj}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio3DObjAdapter() {
		if (tuio3DObjItemProvider == null) {
			tuio3DObjItemProvider = new Tuio3DObjItemProvider(this);
		}

		return tuio3DObjItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio3DCur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio3DCurItemProvider tuio3DCurItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio3DCur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio3DCurAdapter() {
		if (tuio3DCurItemProvider == null) {
			tuio3DCurItemProvider = new Tuio3DCurItemProvider(this);
		}

		return tuio3DCurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio25Obj} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio25ObjItemProvider tuio25ObjItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio25Obj}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio25ObjAdapter() {
		if (tuio25ObjItemProvider == null) {
			tuio25ObjItemProvider = new Tuio25ObjItemProvider(this);
		}

		return tuio25ObjItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio25Cur} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio25CurItemProvider tuio25CurItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio25Cur}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio25CurAdapter() {
		if (tuio25CurItemProvider == null) {
			tuio25CurItemProvider = new Tuio25CurItemProvider(this);
		}

		return tuio25CurItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DBlob} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DBlobItemProvider tuio2DBlobItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DBlob}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DBlobAdapter() {
		if (tuio2DBlobItemProvider == null) {
			tuio2DBlobItemProvider = new Tuio2DBlobItemProvider(this);
		}

		return tuio2DBlobItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio3DBlob} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio3DBlobItemProvider tuio3DBlobItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio3DBlob}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio3DBlobAdapter() {
		if (tuio3DBlobItemProvider == null) {
			tuio3DBlobItemProvider = new Tuio3DBlobItemProvider(this);
		}

		return tuio3DBlobItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio25Blob} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio25BlobItemProvider tuio25BlobItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio25Blob}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio25BlobAdapter() {
		if (tuio25BlobItemProvider == null) {
			tuio25BlobItemProvider = new Tuio25BlobItemProvider(this);
		}

		return tuio25BlobItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DObjAdd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DObjAddItemProvider tuio2DObjAddItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DObjAdd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DObjAddAdapter() {
		if (tuio2DObjAddItemProvider == null) {
			tuio2DObjAddItemProvider = new Tuio2DObjAddItemProvider(this);
		}

		return tuio2DObjAddItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DObjUpdate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DObjUpdateItemProvider tuio2DObjUpdateItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DObjUpdate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DObjUpdateAdapter() {
		if (tuio2DObjUpdateItemProvider == null) {
			tuio2DObjUpdateItemProvider = new Tuio2DObjUpdateItemProvider(this);
		}

		return tuio2DObjUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DObjRemove} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DObjRemoveItemProvider tuio2DObjRemoveItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DObjRemove}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DObjRemoveAdapter() {
		if (tuio2DObjRemoveItemProvider == null) {
			tuio2DObjRemoveItemProvider = new Tuio2DObjRemoveItemProvider(this);
		}

		return tuio2DObjRemoveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DCurAdd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DCurAddItemProvider tuio2DCurAddItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DCurAdd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DCurAddAdapter() {
		if (tuio2DCurAddItemProvider == null) {
			tuio2DCurAddItemProvider = new Tuio2DCurAddItemProvider(this);
		}

		return tuio2DCurAddItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DCurUpdate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DCurUpdateItemProvider tuio2DCurUpdateItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DCurUpdate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DCurUpdateAdapter() {
		if (tuio2DCurUpdateItemProvider == null) {
			tuio2DCurUpdateItemProvider = new Tuio2DCurUpdateItemProvider(this);
		}

		return tuio2DCurUpdateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.Tuio2DCurRemove} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Tuio2DCurRemoveItemProvider tuio2DCurRemoveItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.Tuio2DCurRemove}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuio2DCurRemoveAdapter() {
		if (tuio2DCurRemoveItemProvider == null) {
			tuio2DCurRemoveItemProvider = new Tuio2DCurRemoveItemProvider(this);
		}

		return tuio2DCurRemoveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link net.sf.smbt.osc.eztuio.TuioBundle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TuioBundleItemProvider tuioBundleItemProvider;

	/**
	 * This creates an adapter for a {@link net.sf.smbt.osc.eztuio.TuioBundle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTuioBundleAdapter() {
		if (tuioBundleItemProvider == null) {
			tuioBundleItemProvider = new TuioBundleItemProvider(this);
		}

		return tuioBundleItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (tuio2DObjItemProvider != null) tuio2DObjItemProvider.dispose();
		if (tuio2DCurItemProvider != null) tuio2DCurItemProvider.dispose();
		if (tuio3DObjItemProvider != null) tuio3DObjItemProvider.dispose();
		if (tuio3DCurItemProvider != null) tuio3DCurItemProvider.dispose();
		if (tuio25ObjItemProvider != null) tuio25ObjItemProvider.dispose();
		if (tuio25CurItemProvider != null) tuio25CurItemProvider.dispose();
		if (tuio2DBlobItemProvider != null) tuio2DBlobItemProvider.dispose();
		if (tuio3DBlobItemProvider != null) tuio3DBlobItemProvider.dispose();
		if (tuio25BlobItemProvider != null) tuio25BlobItemProvider.dispose();
		if (tuio2DObjAddItemProvider != null) tuio2DObjAddItemProvider.dispose();
		if (tuio2DObjUpdateItemProvider != null) tuio2DObjUpdateItemProvider.dispose();
		if (tuio2DObjRemoveItemProvider != null) tuio2DObjRemoveItemProvider.dispose();
		if (tuio2DCurAddItemProvider != null) tuio2DCurAddItemProvider.dispose();
		if (tuio2DCurUpdateItemProvider != null) tuio2DCurUpdateItemProvider.dispose();
		if (tuio2DCurRemoveItemProvider != null) tuio2DCurRemoveItemProvider.dispose();
		if (tuioBundleItemProvider != null) tuioBundleItemProvider.dispose();
	}

}
