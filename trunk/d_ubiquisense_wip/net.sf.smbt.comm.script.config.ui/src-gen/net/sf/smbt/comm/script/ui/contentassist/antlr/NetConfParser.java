/*
* generated by Xtext
*/
package net.sf.smbt.comm.script.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import net.sf.smbt.comm.script.services.NetConfGrammarAccess;

public class NetConfParser extends AbstractContentAssistParser {
	
	@Inject
	private NetConfGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected net.sf.smbt.comm.script.ui.contentassist.antlr.internal.InternalNetConfParser createParser() {
		net.sf.smbt.comm.script.ui.contentassist.antlr.internal.InternalNetConfParser result = new net.sf.smbt.comm.script.ui.contentassist.antlr.internal.InternalNetConfParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getIPExprAccess().getAlternatives(), "rule__IPExpr__Alternatives");
					put(grammarAccess.getTRANSPORT_PROTOCOLAccess().getAlternatives(), "rule__TRANSPORT_PROTOCOL__Alternatives");
					put(grammarAccess.getRxKindAccess().getAlternatives(), "rule__RxKind__Alternatives");
					put(grammarAccess.getDSLStrategyAccess().getAlternatives(), "rule__DSLStrategy__Alternatives");
					put(grammarAccess.getDSLRateAccess().getAlternatives(), "rule__DSLRate__Alternatives");
					put(grammarAccess.getDSLPriorityAccess().getAlternatives(), "rule__DSLPriority__Alternatives");
					put(grammarAccess.getNetCfgAccess().getGroup(), "rule__NetCfg__Group__0");
					put(grammarAccess.getDSLOrchestrorImportAccess().getGroup(), "rule__DSLOrchestrorImport__Group__0");
					put(grammarAccess.getNetPortAccess().getGroup(), "rule__NetPort__Group__0");
					put(grammarAccess.getNetPortAccess().getGroup_6(), "rule__NetPort__Group_6__0");
					put(grammarAccess.getNetPortAccess().getGroup_7(), "rule__NetPort__Group_7__0");
					put(grammarAccess.getNetPortAccess().getGroup_7_2(), "rule__NetPort__Group_7_2__0");
					put(grammarAccess.getNetPortAccess().getGroup_8(), "rule__NetPort__Group_8__0");
					put(grammarAccess.getNetPortAccess().getGroup_8_2(), "rule__NetPort__Group_8_2__0");
					put(grammarAccess.getNetDecoderAccess().getGroup(), "rule__NetDecoder__Group__0");
					put(grammarAccess.getNetInterpreterAccess().getGroup(), "rule__NetInterpreter__Group__0");
					put(grammarAccess.getNetListenerAccess().getGroup(), "rule__NetListener__Group__0");
					put(grammarAccess.getNetOrchestrorScopeAccess().getGroup(), "rule__NetOrchestrorScope__Group__0");
					put(grammarAccess.getNetOrchestrorScopeAccess().getGroup_2(), "rule__NetOrchestrorScope__Group_2__0");
					put(grammarAccess.getNetBindAccess().getGroup(), "rule__NetBind__Group__0");
					put(grammarAccess.getNetBindAccess().getGroup_2(), "rule__NetBind__Group_2__0");
					put(grammarAccess.getNetBindAccess().getGroup_2_2(), "rule__NetBind__Group_2_2__0");
					put(grammarAccess.getNetBindAccess().getGroup_3(), "rule__NetBind__Group_3__0");
					put(grammarAccess.getNetBindAccess().getGroup_3_2(), "rule__NetBind__Group_3_2__0");
					put(grammarAccess.getNetBindAccess().getGroup_6(), "rule__NetBind__Group_6__0");
					put(grammarAccess.getIPExprAccess().getGroup_1(), "rule__IPExpr__Group_1__0");
					put(grammarAccess.getIPExprAccess().getGroup_2(), "rule__IPExpr__Group_2__0");
					put(grammarAccess.getIPExprAccess().getGroup_3(), "rule__IPExpr__Group_3__0");
					put(grammarAccess.getIPExprAccess().getGroup_4(), "rule__IPExpr__Group_4__0");
					put(grammarAccess.getDSLOrchestrorAccess().getGroup(), "rule__DSLOrchestror__Group__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup(), "rule__DSLCommandEngine__Group__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_2(), "rule__DSLCommandEngine__Group_2__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_3(), "rule__DSLCommandEngine__Group_3__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_4(), "rule__DSLCommandEngine__Group_4__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_5(), "rule__DSLCommandEngine__Group_5__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_6(), "rule__DSLCommandEngine__Group_6__0");
					put(grammarAccess.getDSLCommandEngineAccess().getGroup_7(), "rule__DSLCommandEngine__Group_7__0");
					put(grammarAccess.getDSLEngineClientAccess().getGroup(), "rule__DSLEngineClient__Group__0");
					put(grammarAccess.getDSLEngineClientAccess().getGroup_2(), "rule__DSLEngineClient__Group_2__0");
					put(grammarAccess.getNetCfgAccess().getImportsAssignment_0(), "rule__NetCfg__ImportsAssignment_0");
					put(grammarAccess.getNetCfgAccess().getListenersAssignment_1(), "rule__NetCfg__ListenersAssignment_1");
					put(grammarAccess.getNetCfgAccess().getInterpretersAssignment_2(), "rule__NetCfg__InterpretersAssignment_2");
					put(grammarAccess.getNetCfgAccess().getDecodersAssignment_3(), "rule__NetCfg__DecodersAssignment_3");
					put(grammarAccess.getNetCfgAccess().getPortsAssignment_4(), "rule__NetCfg__PortsAssignment_4");
					put(grammarAccess.getNetCfgAccess().getOrchestrorScopesAssignment_5(), "rule__NetCfg__OrchestrorScopesAssignment_5");
					put(grammarAccess.getDSLOrchestrorImportAccess().getImportURIAssignment_1(), "rule__DSLOrchestrorImport__ImportURIAssignment_1");
					put(grammarAccess.getNetPortAccess().getNameAssignment_1(), "rule__NetPort__NameAssignment_1");
					put(grammarAccess.getNetPortAccess().getPortIDAssignment_3(), "rule__NetPort__PortIDAssignment_3");
					put(grammarAccess.getNetPortAccess().getKindAssignment_5(), "rule__NetPort__KindAssignment_5");
					put(grammarAccess.getNetPortAccess().getSpeedAssignment_6_1(), "rule__NetPort__SpeedAssignment_6_1");
					put(grammarAccess.getNetPortAccess().getPortsAssignment_7_1(), "rule__NetPort__PortsAssignment_7_1");
					put(grammarAccess.getNetPortAccess().getPortsAssignment_7_2_1(), "rule__NetPort__PortsAssignment_7_2_1");
					put(grammarAccess.getNetPortAccess().getIpExprAssignment_8_1(), "rule__NetPort__IpExprAssignment_8_1");
					put(grammarAccess.getNetPortAccess().getIpExprAssignment_8_2_1(), "rule__NetPort__IpExprAssignment_8_2_1");
					put(grammarAccess.getNetPortAccess().getModeAssignment_8_4(), "rule__NetPort__ModeAssignment_8_4");
					put(grammarAccess.getNetDecoderAccess().getNameAssignment_1(), "rule__NetDecoder__NameAssignment_1");
					put(grammarAccess.getNetDecoderAccess().getClazzAssignment_3(), "rule__NetDecoder__ClazzAssignment_3");
					put(grammarAccess.getNetInterpreterAccess().getNameAssignment_1(), "rule__NetInterpreter__NameAssignment_1");
					put(grammarAccess.getNetInterpreterAccess().getClazzAssignment_3(), "rule__NetInterpreter__ClazzAssignment_3");
					put(grammarAccess.getNetListenerAccess().getNameAssignment_1(), "rule__NetListener__NameAssignment_1");
					put(grammarAccess.getNetListenerAccess().getClazzAssignment_3(), "rule__NetListener__ClazzAssignment_3");
					put(grammarAccess.getNetOrchestrorScopeAccess().getDslOrchestrorAssignment_1(), "rule__NetOrchestrorScope__DslOrchestrorAssignment_1");
					put(grammarAccess.getNetOrchestrorScopeAccess().getBindsAssignment_2_1(), "rule__NetOrchestrorScope__BindsAssignment_2_1");
					put(grammarAccess.getNetBindAccess().getEngineAssignment_1(), "rule__NetBind__EngineAssignment_1");
					put(grammarAccess.getNetBindAccess().getInterpreterAssignment_2_1(), "rule__NetBind__InterpreterAssignment_2_1");
					put(grammarAccess.getNetBindAccess().getCmdInjectAssignment_2_2_1(), "rule__NetBind__CmdInjectAssignment_2_2_1");
					put(grammarAccess.getNetBindAccess().getDecoderAssignment_3_1(), "rule__NetBind__DecoderAssignment_3_1");
					put(grammarAccess.getNetBindAccess().getFrameInjectAssignment_3_2_1(), "rule__NetBind__FrameInjectAssignment_3_2_1");
					put(grammarAccess.getNetBindAccess().getPortAssignment_5(), "rule__NetBind__PortAssignment_5");
					put(grammarAccess.getNetBindAccess().getListenersAssignment_6_1(), "rule__NetBind__ListenersAssignment_6_1");
					put(grammarAccess.getDSLOrchestrorAccess().getNameAssignment_1(), "rule__DSLOrchestror__NameAssignment_1");
					put(grammarAccess.getDSLOrchestrorAccess().getEnginesAssignment_3(), "rule__DSLOrchestror__EnginesAssignment_3");
					put(grammarAccess.getDSLOrchestrorAccess().getClientsAssignment_4(), "rule__DSLOrchestror__ClientsAssignment_4");
					put(grammarAccess.getDSLCommandEngineAccess().getNameAssignment_1(), "rule__DSLCommandEngine__NameAssignment_1");
					put(grammarAccess.getDSLCommandEngineAccess().getSpeedAssignment_2_1(), "rule__DSLCommandEngine__SpeedAssignment_2_1");
					put(grammarAccess.getDSLCommandEngineAccess().getTtlAssignment_3_1(), "rule__DSLCommandEngine__TtlAssignment_3_1");
					put(grammarAccess.getDSLCommandEngineAccess().getStrategyAssignment_4_1(), "rule__DSLCommandEngine__StrategyAssignment_4_1");
					put(grammarAccess.getDSLCommandEngineAccess().getThresholdAssignment_5_1(), "rule__DSLCommandEngine__ThresholdAssignment_5_1");
					put(grammarAccess.getDSLCommandEngineAccess().getPriorityAssignment_6_1(), "rule__DSLCommandEngine__PriorityAssignment_6_1");
					put(grammarAccess.getDSLCommandEngineAccess().getFillterIDAssignment_7_1(), "rule__DSLCommandEngine__FillterIDAssignment_7_1");
					put(grammarAccess.getDSLEngineClientAccess().getNameAssignment_1(), "rule__DSLEngineClient__NameAssignment_1");
					put(grammarAccess.getDSLEngineClientAccess().getSpeedAssignment_2_1(), "rule__DSLEngineClient__SpeedAssignment_2_1");
					put(grammarAccess.getDSLEngineClientAccess().getRefCmdEnginesAssignment_4(), "rule__DSLEngineClient__RefCmdEnginesAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			net.sf.smbt.comm.script.ui.contentassist.antlr.internal.InternalNetConfParser typedParser = (net.sf.smbt.comm.script.ui.contentassist.antlr.internal.InternalNetConfParser) parser;
			typedParser.entryRuleNetCfg();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public NetConfGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(NetConfGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
