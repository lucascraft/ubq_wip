<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="net.sf.smbt.comm.script.NetConf" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="netConf">
      <ePackage href="http://www.sf.net/smbt/comm/script/NetConf#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="orchestrorMM">
      <ePackage href="http://www.sf.net/xqz/engine/script/Orchestror#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecoreMM">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="NetCfg">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetCfg"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="imports" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="listeners" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="interpreters" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="decoders" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="ports" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="orchestrorScopes" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DSLOrchestrorImport">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//DSLOrchestrorImport"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="import"/>
        <elements xsi:type="xtext:Assignment" feature="importURI" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetPort">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetPort"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="port"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="portID" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="as"/>
        <elements xsi:type="xtext:Assignment" feature="kind" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="at"/>
          <elements xsi:type="xtext:Assignment" feature="speed" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="accept"/>
          <elements xsi:type="xtext:Assignment" feature="ports" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="ports" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="forward"/>
          <elements xsi:type="xtext:Assignment" feature="ipExpr" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="ipExpr" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="in"/>
          <elements xsi:type="xtext:Assignment" feature="mode" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetDecoder">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetDecoder"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="decoder"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="clazz" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetInterpreter">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetInterpreter"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="interpreter"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="clazz" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetListener">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetListener"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="listener"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="clazz" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetOrchestrorScope">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetOrchestrorScope"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="scope"/>
        <elements xsi:type="xtext:Assignment" feature="dslOrchestror" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLOrchestror"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="{"/>
          <elements xsi:type="xtext:Assignment" cardinality="+" feature="binds" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="}"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NetBind">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetBind"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="bind"/>
        <elements xsi:type="xtext:Assignment" feature="engine" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLCommandEngine"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="=>"/>
          <elements xsi:type="xtext:Assignment" feature="interpreter" operator="=">
            <terminal xsi:type="xtext:CrossReference">
              <type metamodel="/0/@metamodelDeclarations.0">
                <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetInterpreter"/>
              </type>
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
            </terminal>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Assignment" cardinality="+" feature="cmdInject" operator="+=">
              <terminal xsi:type="xtext:CrossReference">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetPort"/>
                </type>
                <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
              </terminal>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="&lt;="/>
          <elements xsi:type="xtext:Assignment" feature="decoder" operator="=">
            <terminal xsi:type="xtext:CrossReference">
              <type metamodel="/0/@metamodelDeclarations.0">
                <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetDecoder"/>
              </type>
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
            </terminal>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Assignment" cardinality="+" feature="frameInject" operator="+=">
              <terminal xsi:type="xtext:CrossReference">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetPort"/>
                </type>
                <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
              </terminal>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="to"/>
        <elements xsi:type="xtext:Assignment" feature="port" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetPort"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="with"/>
          <elements xsi:type="xtext:Assignment" feature="listeners" operator="+=">
            <terminal xsi:type="xtext:CrossReference">
              <type metamodel="/0/@metamodelDeclarations.0">
                <classifier xsi:type="ecore:EClass" href="http://www.sf.net/smbt/comm/script/NetConf#//NetListener"/>
              </type>
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
            </terminal>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="IPExpr">
      <type metamodel="/0/@metamodelDeclarations.2">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="*"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value=".*"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value=".*"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value=".*"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="IPByteExpr">
      <type metamodel="/0/@metamodelDeclarations.2">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:CharacterRange">
          <left value="0"/>
          <right value="9"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:CharacterRange">
            <left value="1"/>
            <right value="9"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="1"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="2"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="5"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="5"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="TRANSPORT_PROTOCOL">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/USB"/>
          <literal value="usb://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/TCP"/>
          <literal value="tcp://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/UDP"/>
          <literal value="udp://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/HTTP"/>
          <literal value="http://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/BLUETOOTH"/>
          <literal value="bt://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/XBEE"/>
          <literal value="xbee://"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//TRANSPORT_PROTOCOL/MIDI"/>
          <literal value="midi://"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="RxKind">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.sf.net/smbt/comm/script/NetConf#//RxKind"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//RxKind/UNICAST"/>
          <literal value="UNICAST"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//RxKind/MULTICAST"/>
          <literal value="MULTICAST"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/smbt/comm/script/NetConf#//RxKind/BROADCAST"/>
          <literal value="BROADCAST"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="net.sf.xqz.engine.script.Orchestror" usedGrammars="/2">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="orchestror">
      <ePackage href="http://www.sf.net/xqz/engine/script/Orchestror#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="DSLOrchestror">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLOrchestror"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="orchestror"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="engines" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="clients" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DSLCommandEngine">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLCommandEngine"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="engine"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="speed"/>
          <elements xsi:type="xtext:Assignment" feature="speed" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.4"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="ttl"/>
          <elements xsi:type="xtext:Assignment" feature="ttl" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="strategy"/>
          <elements xsi:type="xtext:Assignment" feature="strategy" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.3"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="threshold"/>
          <elements xsi:type="xtext:Assignment" feature="threshold" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="priority"/>
          <elements xsi:type="xtext:Assignment" feature="priority" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.5"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="filter"/>
          <elements xsi:type="xtext:Assignment" feature="fillterID" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DSLEngineClient">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLEngineClient"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="client"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="speed"/>
          <elements xsi:type="xtext:Assignment" feature="speed" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.4"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="refCmdEngines" operator="+=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLCommandEngine"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="DSLStrategy">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/PICK_N_RUSH"/>
          <literal value="PICK_N_RUSH"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/OLDEST_MOST_URGENT"/>
          <literal value="OLDEST_MOST_URGENT"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/NEWEST_MOST_URGENT"/>
          <literal value="NEWEST_MOST_URGENT"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/PREDICATE"/>
          <literal value="PREDICATE"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/ROUN_ROBIN"/>
          <literal value="ROUN_ROBIN"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/TIME_RANGE_INCLUSIVE"/>
          <literal value="TIME_RANGE_INCLUSIVE"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLStrategy/TIME_RANGE_EXCLUSIVE"/>
          <literal value="TIME_RANGE_EXCLUSIVE"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="DSLRate">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/MAX"/>
          <literal value="MAX"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/VERY_FAST"/>
          <literal value="VERY_FAST"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/FAST"/>
          <literal value="FAST"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/AVERAGE"/>
          <literal value="AVERAGE"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/SLOW"/>
          <literal value="SLOW"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/VERY_SLOW"/>
          <literal value="VERY_SLOW"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLRate/MIN"/>
          <literal value="MIN"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="DSLPriority">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority/HIGHER"/>
          <literal value="HIGHER"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority/HIGH"/>
          <literal value="HIGH"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority/MEDIUM"/>
          <literal value="MEDIUM"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority/LOW"/>
          <literal value="LOW"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.sf.net/xqz/engine/script/Orchestror#//DSLPriority/LOWEST"/>
          <literal value="LOWEST"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/2/@rules.5 /2/@rules.3 /2/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
